generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model clientes {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String?  @unique
  telefono  String?
  direccion String?

  vehiculos vehiculos[]
  facturas  facturas[]
}

model piezas {
  id     Int     @id @default(autoincrement())
  nombre String
  marca  String?
  precio Float
  stock  Int     @default(0)
  codigo String  @unique

  detalle_reparacion detalle_reparacion[]
}

model detalle_reparacion {
  reparacion_id Int
  pieza_id     Int
  cantidad     Int     @default(1)
  precio_unitario Float

  reparacion reparaciones @relation(fields: [reparacion_id], references: [id], onDelete: Cascade)
  pieza      piezas       @relation(fields: [pieza_id], references: [id])

  @@id([reparacion_id, pieza_id])
}

model roles {
  id        Int     @id @default(autoincrement())
  nombre    String  @unique
  permisos  Json

  usuarios  usuarios[]
}

model usuarios {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password_hash String
  nombre        String
  activo        Boolean  @default(true)
  rol_id        Int

  rol       roles        @relation(fields: [rol_id], references: [id])
  mecanico  mecanicos?
  reparaciones_recepcionista reparaciones[] @relation("reparacion_recepcionista")
}

model mecanicos {
  id          Int      @id @default(autoincrement())
  usuario_id  Int      @unique
  especialidad String?

  usuario    usuarios @relation(fields: [usuario_id], references: [id])
  reparaciones reparaciones[]
}

model vehiculos {
  id          Int      @id @default(autoincrement())
  marca       String
  modelo      String
  a√±o         Int?
  patente     String   @unique
  kilometraje Int?
  cliente_id  Int

  cliente     clientes  @relation(fields: [cliente_id], references: [id])
  reparaciones reparaciones[]
}

model reparaciones {
  id               Int       @id @default(autoincrement())
  descripcion      String
  fecha_entrada    DateTime  @default(now())
  fecha_salida     DateTime?
  estado           String    @default("en_revision")
  costo_mano_obra  Float     @default(0.0)
  vehiculo_id      Int
  mecanico_id      Int?
  recepcionista_id Int

  vehiculo         vehiculos   @relation(fields: [vehiculo_id], references: [id])
  mecanico         mecanicos?  @relation(fields: [mecanico_id], references: [id])
  recepcionista    usuarios    @relation("reparacion_recepcionista", fields: [recepcionista_id], references: [id])

  detalle_reparacion detalle_reparacion[]
  facturas          facturas[]
}

model facturas {
  id           Int       @id @default(autoincrement())
  fecha        DateTime  @default(now())
  total        Float
  cliente_id   Int
  reparacion_id Int

  cliente     clientes   @relation(fields: [cliente_id], references: [id])
  reparacion  reparaciones @relation(fields: [reparacion_id], references: [id])
}
