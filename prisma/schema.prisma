generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String?  @unique
  telefono  String?  @map("telefono")
  direccion String?  @map("direccion")

  vehiculos Vehiculo[]
  facturas  Factura[]
}

model Vehiculo {
  id          Int     @id @default(autoincrement())
  marca       String
  modelo      String
  anio        Int?    @map("anio")
  patente     String  @unique
  kilometraje Int?    @map("kilometraje")
  clienteId   Int     @map("cliente_id")

  cliente     Cliente @relation(fields: [clienteId], references: [id])
  reparaciones Reparacion[]
}

model Reparacion {
  id              Int       @id @default(autoincrement())
  descripcion     String
  fechaEntrada    DateTime  @default(now()) @map("fecha_entrada")
  fechaSalida     DateTime? @map("fecha_salida")
  estado          String    @default("en_revision")
  costoManoObra   Float     @default(0.0) @map("costo_mano_obra")
  vehiculoId      Int       @map("vehiculo_id")
  mecanicoId      Int?      @map("mecanico_id")
  recepcionistaId Int       @map("recepcionista_id")

  vehiculo        Vehiculo  @relation(fields: [vehiculoId], references: [id])
  mecanico        Mecanico? @relation(fields: [mecanicoId], references: [id])
  recepcionista   Usuario   @relation("reparacion_recepcionista", fields: [recepcionistaId], references: [id])

  detalleReparacion DetalleReparacion[]
  facturas          Factura[]
}

model DetalleReparacion {
  reparacionId   Int     @map("reparacion_id")
  piezaId        Int     @map("pieza_id")
  cantidad       Int     @default(1)
  precioUnitario Float   @map("precio_unitario")

  reparacion     Reparacion @relation(fields: [reparacionId], references: [id], onDelete: Cascade)
  pieza          Pieza      @relation(fields: [piezaId], references: [id])

  @@id([reparacionId, piezaId])
}

model Pieza {
  id       Int    @id @default(autoincrement())
  nombre   String
  marca    String?
  precio   Float
  stock    Int    @default(0)
  codigo   String @unique

  detalleReparacion DetalleReparacion[]
}

model Factura {
  id            Int      @id @default(autoincrement())
  fecha         DateTime @default(now())
  total         Float
  clienteId     Int      @map("cliente_id")
  reparacionId  Int      @map("reparacion_id")

  cliente       Cliente    @relation(fields: [clienteId], references: [id])
  reparacion    Reparacion @relation(fields: [reparacionId], references: [id])
}

model Usuario {
  id           Int     @id @default(autoincrement())
  email        String  @unique
  passwordHash String  @map("password_hash")
  nombre       String
  activo       Boolean @default(true)
  rolId        Int     @map("rol_id")

  rol          Rol      @relation(fields: [rolId], references: [id])
  mecanico     Mecanico?
  reparacionesRecepcionista Reparacion[] @relation("reparacion_recepcionista")
}

model Rol {
  id       Int    @id @default(autoincrement())
  nombre   String @unique
  permisos Json

  usuarios Usuario[]
}

model Mecanico {
  id           Int     @id @default(autoincrement())
  usuarioId    Int     @unique @map("usuario_id")
  especialidad String?

  usuario      Usuario @relation(fields: [usuarioId], references: [id])
  reparaciones Reparacion[]
}